# We use the preprocessed github repository to generate a sequence of states.
# We achieve this by removing lines of code and bodies of code.
# Bodies of code are simple python indentation blocks. Including the first line of parent indentation.
# Because parent indentations include very important context information:
# for i in(range(5)):
#   print(i)
# The aim is to use these states of sequences to train an RL agent, built on CodeLlama
# S: Current state of the repository
# A: Code generated by CodeLlama
# R: End reward = Similarity to final repository.

# There is sadly high risk of overfitting. But for the first stage of the experiments
# this overfitting can be ignored, and the followup work can aim to address this overfitting.


# The first stage of the development is pulling git repositories into a folder where
# this algorithm will work on. This algorithm will work on the already pulled and extracted 
# github repository.

# I start by pulling a random repository.
# We decided to limit our focus on API repositories, because API's are functional machines.
# So the repository I chose: https://github.com/ganyariya/gym-md
# From this search of PyPI:
# https://pypi.org/search/?q=&o=&c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+Artificial+Intelligence&c=Programming+Language+%3A%3A+Python+%3A%3A+3&c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only&c=Natural+Language+%3A%3A+English

import os
items_list = os.listdir('.')
repos_list = []
for item in items_list:
    if os.path.isdir(item):
        # Ignore hidden files of the top directory (especially .git)
        if not item[0] == '.':
            repos_list.append(item)

print(repos_list)